<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.dao.StudentScoreMapper" >
  <resultMap id="BaseResultMap" type="com.qf.pojo.StudentScore" >
    <result column="stuId" property="stuid" jdbcType="INTEGER" />
    <result column="stuName" property="stuname" jdbcType="VARCHAR" />
    <result column="tearchId" property="tearchid" jdbcType="INTEGER" />
    <result column="tearchName" property="tearchname" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="DATE" />
    <result column="score" property="score" jdbcType="DOUBLE" />
    <result column="examType" property="examtype" jdbcType="VARCHAR" />
    <result column="course" property="course" jdbcType="VARCHAR" />
    <result column="classId" property="classid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stuId, stuName, tearchId, tearchName, time, score, examType, course, classId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.pojo.StudentScoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.qf.pojo.StudentScoreExample" >
    delete from student_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.StudentScore" >
    insert into student_score (stuId, stuName, tearchId, 
      tearchName, time, score, 
      examType, course, classId
      )
    values (#{stuid,jdbcType=INTEGER}, #{stuname,jdbcType=VARCHAR}, #{tearchid,jdbcType=INTEGER}, 
      #{tearchname,jdbcType=VARCHAR}, #{time,jdbcType=DATE}, #{score,jdbcType=DOUBLE}, 
      #{examtype,jdbcType=VARCHAR}, #{course,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.StudentScore" >
    insert into student_score
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        stuId,
      </if>
      <if test="stuname != null" >
        stuName,
      </if>
      <if test="tearchid != null" >
        tearchId,
      </if>
      <if test="tearchname != null" >
        tearchName,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="examtype != null" >
        examType,
      </if>
      <if test="course != null" >
        course,
      </if>
      <if test="classid != null" >
        classId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="stuname != null" >
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="tearchid != null" >
        #{tearchid,jdbcType=INTEGER},
      </if>
      <if test="tearchname != null" >
        #{tearchname,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=DATE},
      </if>
      <if test="score != null" >
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="examtype != null" >
        #{examtype,jdbcType=VARCHAR},
      </if>
      <if test="course != null" >
        #{course,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.StudentScoreExample" resultType="java.lang.Integer" >
    select count(*) from student_score
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_score
    <set >
      <if test="record.stuid != null" >
        stuId = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.stuname != null" >
        stuName = #{record.stuname,jdbcType=VARCHAR},
      </if>
      <if test="record.tearchid != null" >
        tearchId = #{record.tearchid,jdbcType=INTEGER},
      </if>
      <if test="record.tearchname != null" >
        tearchName = #{record.tearchname,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=DOUBLE},
      </if>
      <if test="record.examtype != null" >
        examType = #{record.examtype,jdbcType=VARCHAR},
      </if>
      <if test="record.course != null" >
        course = #{record.course,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null" >
        classId = #{record.classid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_score
    set stuId = #{record.stuid,jdbcType=INTEGER},
      stuName = #{record.stuname,jdbcType=VARCHAR},
      tearchId = #{record.tearchid,jdbcType=INTEGER},
      tearchName = #{record.tearchname,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=DATE},
      score = #{record.score,jdbcType=DOUBLE},
      examType = #{record.examtype,jdbcType=VARCHAR},
      course = #{record.course,jdbcType=VARCHAR},
      classId = #{record.classid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>