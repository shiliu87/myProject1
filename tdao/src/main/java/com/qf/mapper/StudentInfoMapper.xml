<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.dao.StudentInfoMapper" >
  <resultMap id="BaseResultMap" type="com.qf.pojo.StudentInfo" >
    <id column="stuId" property="stuid" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="placeoforigin" property="placeoforigin" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="stuName" property="stuname" jdbcType="VARCHAR" />
    <result column="classId" property="classid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stuId, sex, level, tel, placeoforigin, age, stuName, classId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.pojo.StudentInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student_info
    where stuId = #{stuid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student_info
    where stuId = #{stuid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.pojo.StudentInfoExample" >
    delete from student_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.pojo.StudentInfo" >
    insert into student_info (stuId, sex, level, 
      tel, placeoforigin, age, 
      stuName, classId)
    values (#{stuid,jdbcType=INTEGER}, #{sex,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{tel,jdbcType=VARCHAR}, #{placeoforigin,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{stuname,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.pojo.StudentInfo" >
    insert into student_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        stuId,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="placeoforigin != null" >
        placeoforigin,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="stuname != null" >
        stuName,
      </if>
      <if test="classid != null" >
        classId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuid != null" >
        #{stuid,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="placeoforigin != null" >
        #{placeoforigin,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="stuname != null" >
        #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.pojo.StudentInfoExample" resultType="java.lang.Integer" >
    select count(*) from student_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student_info
    <set >
      <if test="record.stuid != null" >
        stuId = #{record.stuid,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.placeoforigin != null" >
        placeoforigin = #{record.placeoforigin,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.stuname != null" >
        stuName = #{record.stuname,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null" >
        classId = #{record.classid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student_info
    set stuId = #{record.stuid,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      tel = #{record.tel,jdbcType=VARCHAR},
      placeoforigin = #{record.placeoforigin,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      stuName = #{record.stuname,jdbcType=VARCHAR},
      classId = #{record.classid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.pojo.StudentInfo" >
    update student_info
    <set >
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="placeoforigin != null" >
        placeoforigin = #{placeoforigin,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="stuname != null" >
        stuName = #{stuname,jdbcType=VARCHAR},
      </if>
      <if test="classid != null" >
        classId = #{classid,jdbcType=INTEGER},
      </if>
    </set>
    where stuId = #{stuid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.pojo.StudentInfo" >
    update student_info
    set sex = #{sex,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR},
      placeoforigin = #{placeoforigin,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      stuName = #{stuname,jdbcType=VARCHAR},
      classId = #{classid,jdbcType=INTEGER}
    where stuId = #{stuid,jdbcType=INTEGER}
  </update>
</mapper>